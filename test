# Define Jira credentials and base URL
$JiraBaseUrl = "https://your-jira-instance.atlassian.net"
$JiraUsername = "your.email@example.com"
$JiraApiToken = "your_api_token"  # Replace with your actual API token

# Encode credentials for Basic Auth
$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$JiraUsername:$JiraApiToken"))

# Function to send GET requests to Jira
function Invoke-JiraGet {
    param (
        [string]$Uri
    )
    $response = Invoke-RestMethod -Uri $Uri -Method Get -Headers @{
        Authorization = "Basic $base64AuthInfo"
        Accept        = "application/json"
    }
    return $response
}

# Function to send DELETE requests to Jira
function Invoke-JiraDelete {
    param (
        [string]$Uri
    )
    $response = Invoke-RestMethod -Uri $Uri -Method Delete -Headers @{
        Authorization = "Basic $base64AuthInfo"
        Accept        = "application/json"
    }
    return $response
}

# Get all workflows in the Jira instance
$workflowsUri = "$JiraBaseUrl/rest/api/3/workflow"
$workflows = Invoke-JiraGet -Uri $workflowsUri

# Get all workflow schemes in the Jira instance
$workflowSchemesUri = "$JiraBaseUrl/rest/api/3/workflowscheme"
$workflowSchemes = Invoke-JiraGet -Uri $workflowSchemesUri

$unusedWorkflows = @()

# Iterate through the workflows to identify unused ones
foreach ($workflow in $workflows) {
    $workflowId = $workflow.id
    $workflowName = $workflow.name
    $isUsed = $false

    # Check if the workflow is associated with any workflow schemes
    foreach ($scheme in $workflowSchemes.values) {
        if ($scheme.workflows | Where-Object { $_.workflowName -eq $workflowName }) {
            $isUsed = $true
            break
        }
    }

    if (-not $isUsed) {
        $unusedWorkflows += [PSCustomObject]@{
            WorkflowId = $workflowId
            WorkflowName = $workflowName
        }
    }
}

# Display unused workflows for review
if ($unusedWorkflows.Count -gt 0) {
    Write-Host "The following workflows are unused and can be removed:"
    $unusedWorkflows | ForEach-Object {
        Write-Host "$($_.WorkflowId) - $($_.WorkflowName)"
    }

    $confirmation = Read-Host "Do you want to delete these workflows? (yes/no)"
    if ($confirmation -eq "yes") {
        foreach ($workflow in $unusedWorkflows) {
            Write-Host "Deleting workflow: $($workflow.WorkflowName)"
            $deleteWorkflowUri = "$JiraBaseUrl/rest/api/3/workflow/$($workflow.WorkflowId)"
            Invoke-JiraDelete -Uri $deleteWorkflowUri
        }
        Write-Host "Selected workflows have been deleted."
    } else {
        Write-Host "No workflows were deleted."
    }
} else {
    Write-Host "No unused workflows found."
}
